#!/usr/bin/python
import sys

# Colors
class bcolors:
    GREEN = '\033[32m'
    ORANGE = '\033[93m'
    RED = '\033[31m'
    END = '\033[0m'

# Open file, and remove the following characters: \n, \r\n, \x, space and then lowercase
def open_file(file):
    with open(file,"r") as fin:
        result = fin.read().splitlines()
        result = ''.join(result)
        result = result.replace("\n","")
        result = result.replace("\r\n","")
        result = result.replace("\\x","")
        result = result.replace(" ","")
        result = result.lower()
        return result

def colored_errors(string, index, l_errors):
    result = ""
    for i in range(0, len(string), 2):
        temp = string[i:i+2]
        if (i+index) in l_errors:
            result += "%s%s%s " % (bcolors.RED, temp, bcolors.END)
        else:
            result += "%s " % (temp)
    return result

# Print shellcode to help identify errors (with colors)
def print_shellcodes(str1, str2, l_errors):
    print "\n[*] Display shellcodes below (shellcode | olly):\n"
    for i in range(0, len(str1), 16):
        part_1 = colored_errors(str1[i:i+16].upper(), i, l_errors)
        part_2 = colored_errors(str2[i:i+16].upper(), i, l_errors)
        print "%s     |      %s" % (part_1, part_2)

def check(str1, str2):
    if len(str1) != len(str2):
        print "[!] Length of shellcodes is different"
        print "\t[*] Length 'shellcode': %d" % (len(str1))
        print "\t[*] Length 'olly': %d" % (len(str2))
    else:
        print "[+] Length of both shellcodes is equal"

    print "\n[*] Checking for errors"
    error = 0
    l_errors = list()
    for e in range(0, len(str1), 2):
        p_str1 = str1[e:e+2]
        p_str2 = str2[e:e+2]
        if p_str2 != p_str1:
            print "\t%s[!] Error @index: %d, shellcode: 0x%s != olly: 0x%s%s" % (bcolors.RED, e, p_str1, p_str2, bcolors.END)
            l_errors.append(e)
            error += 1

    if error > 0:
        print "\n[!] %s%d error(s)%s were found" % (bcolors.RED, error, bcolors.END)
        print_shellcodes(str1, str2, l_errors)
    else:
        print "[*] No errors were found"
        print "\n%s[+] Both shellcodes are equals%s" % (bcolors.GREEN, bcolors.END)

if __name__ == "__main__":
    if (len(sys.argv) != 3):
        print "\n\tUsage: %s <shellcode file> <olly 'binary copy' output>" % (sys.argv[0])
        print "\n\tThis script will check for bad characters by comparing both shellcodes"
        print "\t1st file: shellcode (usually from msfvenom)"
        print "\t2nd file: output from ollyDBG 'binary copy'"
        print "\tWhile reading both files, the following characters will be removed: \\x, \\n, \\n\\r, space"
        sys.exit(1)

    print "\n**** Checking for bad chars ****\n"
    check(open_file(sys.argv[1]), open_file(sys.argv[2]))
